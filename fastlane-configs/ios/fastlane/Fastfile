# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  desc "Build and upload to TestFlight"
  lane :ios_testflight do
    setup_ci
    
    # Configure App Store Connect API Key
    app_store_connect_api_key(
      key_id: ENV["APP_STORE_CONNECT_API_KEY_ID"],
      issuer_id: ENV["APP_STORE_CONNECT_API_ISSUER_ID"],
      key_content: ENV["APP_STORE_CONNECT_API_KEY_CONTENT"],
      is_key_content_base64: ENV["isKeyBase64"]
    )
    
    # Fetch certs & profiles for App Store distribution
    match(
      type: "appstore",  
      readonly: false,
    )
    
    # Update Xcode project with Match profiles
      update_project_provisioning(
      xcodeproj: "Runner.xcodeproj",
      profile: ENV["sigh_#{ENV['BUNDLE_IDENTIFIER']}_appstore_profile-path"],
      target_filter: "Runner",
      build_configuration: "Release"
      )

      # Update code signing settings
      update_code_signing_settings(
        use_automatic_signing: false,
        team_id: ENV["TEAM_ID"],
        bundle_identifier: ENV["BUNDLE_IDENTIFIER"],
        profile_name: "match AppStore #{ENV['BUNDLE_IDENTIFIER']}",
        code_sign_identity: "Apple Distribution"
      )

      sh "pod repo update"

      flutterV = ENV["flutterV"] 
      isPatch = ENV["isPatch"] || "false"
      isShorebird = ENV["isShorebird"] || "false"

      releaseV = ENV["releaseV"]

      if isShorebird == "true"
        sh "echo \"üê¶ Shorebird action initiated\""
        if isPatch == "true"
          sh "echo \"üéØ Shorebird Patch action initiated\""
          patch_args = "--release-version #{releaseV} --allow-asset-diffs"
          
          # Add additional build arguments if available
        
          
          shorebird_patch(platform: "ios", args: patch_args)
        else
          sh "echo \"üöÄ Shorebird Release action initiated\""
          flutter_args = "--no-tree-shake-icons"
          
          # Add build-name and build-number if available
          if ENV["buildName"]
            flutter_args += " --build-name=#{ENV["buildName"]}"
          end
          if ENV["buildNumber"]
            flutter_args += " --build-number=#{ENV["buildNumber"]}"
          end
          
          # Add additional build arguments if available
          if ENV["buildArgsIos"]
            flutter_args += " #{ENV["buildArgsIos"]}"
          end
          
          shorebird_release(
            platform: "ios", 
            args: "--flutter-version #{flutterV} -- #{flutter_args}",
            # verbose: true
          )
        end
      else
        sh "echo \"üöÄ Building with Flutter version: #{flutterV}\""
        build_cmd = "cd ../.. && flutter build ipa --release"
        
        # Add build-name and build-number if available
        if ENV["buildName"]
          build_cmd += " --build-name=#{ENV["buildName"]}"
        end
        if ENV["buildNumber"]
          build_cmd += " --build-number=#{ENV["buildNumber"]}"
        end
        
        # Add additional build arguments if available
        if ENV["buildArgsIos"]
          build_cmd += " #{ENV["buildArgsIos"]}"
        end
        
        sh build_cmd
      end


    # Upload to TestFlight
    if isPatch == "false"
    upload_to_testflight(
      skip_waiting_for_build_processing: true,
      changelog: "Beta release - latest features and bug fixes"
    )
    end
  end

  
end
