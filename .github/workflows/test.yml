name: Test Flutter Fastlane Action
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-scripts:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Verify script permissions
        run: |
          chmod +x scripts/run-fastlane.sh
          chmod +x scripts/validate.sh

      - name: Validate scripts
        run: |
          ls -la scripts/
          test -x scripts/run-fastlane.sh && echo "run-fastlane.sh is executable" || echo "Error: run-fastlane.sh is not executable"
          test -x scripts/validate.sh && echo "validate.sh is executable" || echo "Error: validate.sh is not executable"

  test-action:
    runs-on: ubuntu-latest
    needs: test-scripts
    steps:
      - uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "stable"

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.1"

      - name: Verify Flutter and Fastlane installations
        run: |
          flutter --version
          gem install fastlane -N
          fastlane --version

      # Create a simple test Flutter project
      - name: Create test Flutter project
        run: |
          flutter create test_project
          cd test_project
          mkdir -p android/fastlane
          mkdir -p ios/fastlane

          # Create simple Fastfile for testing
          cat > android/fastlane/Fastfile <<EOL
          platform :android do
            lane :test do
              sh "echo 'Android test lane executed successfully'"
            end
          end
          EOL

          cat > ios/fastlane/Fastfile <<EOL
          platform :ios do
            lane :test do
              sh "echo 'iOS test lane executed successfully'"
            end
          end
          EOL

      # Test the action with the test project
      - name: Test action with Android
        uses: ./
        with:
          working-directory: test_project
          platform: android
          lane: test

      # Note: We can't test iOS on Ubuntu runner, would need macOS runner for that
